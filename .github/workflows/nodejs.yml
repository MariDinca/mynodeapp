name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    became: true

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: echo "No tests defined"  # aici pui comanda de test (ex: `npm test`)

    - name: Build Docker image
      run: docker build -t my-node-app .

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push image to DockerHub
      run: docker tag my-node-app ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:latest &&
           docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-node-app:latest

    - name: Decode PEM key for SSH
      run: |
        echo "${{ secrets.EC2_KEY_B64 }}" | base64 -d > key.pem
        chmod 400 key.pem

    - name: SSH and deploy Docker image on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

          # Stop & remove old container if exists
          docker stop my-app || true
          docker rm my-app || true
   
          # Run new container
          docker run -d --name my-app -p 80:3000 ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          EOF

